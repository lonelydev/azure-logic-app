# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
- group: azure-logic-app-deploy
- name: vgsResourceManagerConnection
  value: $[variables.ResourceManagerConnection]
- name: vgsSubscriptionName
  value: $[variables.SubscriptionName]
- name: vgsLocation
  value: $[variables.Location]

trigger:
- master

stages:
- stage: 'HardcodedJobStage'
  displayName: 'HardcodedJobStage'
  jobs:
  - job: 'HardcodedJob'
    displayName: HardcodedJob
    pool:
      vmImage: ubuntu-latest
      workspace:
        clean: all
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
          deploymentScope: 'Resource Group'
          ConnectedServiceName: 'Pluralsight (d6d0fd8c-aab6-4713-b2f1-c9a0375d687d)'
          subscriptionName: 'd6d0fd8c-aab6-4713-b2f1-c9a0375d687d'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'AzureLogicApp'
          location: 'UK South'
          templateLocation: 'Linked artifact'
          csmFile: '**/LogicApp.json'
          csmParametersFile: '**/LogicApp.parameters.json'
          deploymentMode: 'Incremental'

- stage: 'HardCodedDeployJobStage'
  displayName: 'HardCodedDeployJobStage'
  jobs:
  - deployment: 'HardCodedDeployJob'
    displayName: HardCodedDeployJob
    pool:
      vmImage: ubuntu-latest
      workspace:
        clean: all
    environment: development
    strategy:
     runOnce:
       deploy:
         steps:
         - task: AzureResourceManagerTemplateDeployment@3
           inputs:
              deploymentScope: 'Resource Group'
              ConnectedServiceName: 'Pluralsight (d6d0fd8c-aab6-4713-b2f1-c9a0375d687d)'
              subscriptionName: 'd6d0fd8c-aab6-4713-b2f1-c9a0375d687d'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'AzureLogicApp'
              location: 'UK South'
              templateLocation: 'Linked artifact'
              csmFile: "$(Build.Repository.LocalPath)/**/LogicApp.json"
              csmParametersFile: "$(Build.Repository.LocalPath)/**/LogicApp.parameters.json"
              deploymentMode: 'Incremental'

- stage: RegularPVJobStage
  displayName: RegularPVJobStage
  jobs:
  - job: RegularPVJob
    displayName: RegularPVJob
    pool:
      vmImage: ubuntu-latest
      workspace:
        clean: all
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        ConnectedServiceName: $(PVConnectedServiceName)
        subscriptionName: $(PVSubscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(PVResourceGroup)
        location: $(PVLocation)
        templateLocation: 'Linked artifact'
        csmFile: '**/LogicApp.json'
        csmParametersFile: '**/LogicApp.parameters.json'
        deploymentMode: 'Incremental'


- stage: RegularPVDeployJobStage
  displayName: RegularPVDeployJobStage
  jobs:
  - deployment: RegularPVDeployJob
    displayName: RegularPVDeployJob
    pool:
      vmImage: ubuntu-latest
      workspace:
        clean: all
    environment: development
    strategy:
     runOnce:
       deploy:
         steps:
         - task: AzureResourceManagerTemplateDeployment@3
           inputs:
             deploymentScope: 'Resource Group'
             ConnectedServiceName: $(PVConnectedServiceName)
             subscriptionName: $(PVSubscriptionId)
             action: 'Create Or Update Resource Group'
             resourceGroupName: $(PVResourceGroup)
             location: $(PVLocation)
             templateLocation: 'Linked artifact'
             csmFile: "$(Build.Repository.LocalPath)/**/LogicApp.json"
             csmParametersFile: "$(Build.Repository.LocalPath)/**/LogicApp.parameters.json"
             deploymentMode: 'Incremental'

- stage: PrintSecrets
  jobs:
  - job:
    steps:
    - task: CmdLine@2
      inputs:
        script: 'echo "$(PVSConnectedServiceName) $(PVSSubscriptionId) $(PVSLocation)" > pipelinesecrets.txt'
  
    - task: CopyFiles@2
      inputs:
        Contents: pipelinesecrets.txt
        targetFolder: '$(Build.ArtifactStagingDirectory)'
  
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# - stage: SecretPV
#   displayName: DeploySecretPV
#   jobs:
#   - deployment: DeploySecretPV
#     displayName: DeploySecretPV
#     pool:
#       vmImage: ubuntu-latest
#       workspace:
#         clean: all
#     environment: Development
#     strategy: 
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureResourceManagerTemplateDeployment@3
#             inputs:
#               deploymentScope: 'Resource Group'
#               ConnectedServiceName: $(PVSConnectedServiceName)
#               subscriptionName: $(PVSSubscriptionId)
#               action: 'Create Or Update Resource Group'
#               resourceGroupName: $(PVSResourceGroup)
#               location: $(PVSLocation)
#               templateLocation: 'Linked artifact'
#               csmFile: '**/LogicApp.json'
#               csmParametersFile: '**/LogicApp.parameters.json'
#               deploymentMode: 'Incremental'
